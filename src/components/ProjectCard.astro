---
import { Card as ShadcnCard } from './ui/card'

const {
  as: Tag = 'a',
  class: className,
  href,
  heading,
  subheading,
  imagePath,
  altText,
} = Astro.props
---

<Tag href={href} class={`${className} card-wrapper block relative`}>
  <ShadcnCard className="card overflow-hidden rounded-2xl bg-card/90 backdrop-blur-sm shadow-lg transition-all duration-500 border-0">
    <div class="relative overflow-hidden aspect-[16/9] rounded-t-2xl">
      <div class="image-container absolute inset-0">
        <img
          src={imagePath}
          alt={altText}
          class="h-full w-full object-cover"
          loading="eager"
        />
      </div>
      
      <div class="absolute inset-0 bg-gradient-to-t from-black/90 via-black/40 to-transparent"></div>
      
      <div class="absolute bottom-0 left-0 right-0 p-5 transform translate-y-0 transition-transform duration-300">
        <h1 class="text-xl font-semibold text-white mb-1 drop-shadow-md">{heading}</h1>
      </div>
    </div>
    
    <div class="content p-5 bg-gradient-to-br from-card to-card/95 rounded-b-2xl">
      <h2 class="text-sm text-muted-foreground mb-3">{subheading}</h2>
      
      <div class="flex items-center justify-between">
        <div class="view-project flex items-center text-sm font-medium text-primary">
          <span>View Project</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="ml-1 h-4 w-4 arrow-icon"
          >
            <path d="M5 12h14"></path>
            <path d="m12 5 7 7-7 7"></path>
          </svg>
        </div>
        
        <div class="external-link h-8 w-8 flex items-center justify-center rounded-full bg-primary/10 text-primary transform transition-all duration-300">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="14"
            height="14"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
            <polyline points="15 3 21 3 21 9"></polyline>
            <line x1="10" y1="14" x2="21" y2="3"></line>
          </svg>
        </div>
      </div>
    </div>
    
    <div class="card-border"></div>
    <div class="card-shine"></div>
    
    <slot />
  </ShadcnCard>
</Tag>

<style>
  .card-wrapper {
    transition: transform 0.4s cubic-bezier(0.22, 1, 0.36, 1);
  }
  
  .card-wrapper:hover {
    transform: translateY(-8px);
  }
  
  .card {
    position: relative;
    isolation: isolate;
    overflow: visible;
    box-shadow: 0 10px 40px -15px rgba(0, 0, 0, 0.2);
  }
  
  .card:hover {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }
  
  /* Card border effect */
  .card-border {
    position: absolute;
    inset: -1px;
    border-radius: 1rem;
    padding: 1px;
    background: linear-gradient(
      135deg, 
      transparent 20%, 
      hsl(var(--primary)/0.3) 30%, 
      hsl(var(--primary)/0.5) 40%,
      hsl(var(--secondary)/0.5) 60%,
      transparent 80%
    );
    content: "";
    pointer-events: none;
    z-index: -1;
    opacity: 0;
    transition: opacity 0.4s;
  }
  
  .card-wrapper:hover .card-border {
    opacity: 1;
  }
  
  /* Shine effect */
  .card-shine {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100%;
    width: 200%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transform: translateX(-100%);
    opacity: 0;
    pointer-events: none;
    z-index: 2;
  }
  
  .card-wrapper:hover .card-shine {
    animation: shine 1.5s ease both;
  }
  
  .card-wrapper:hover .image-container img {
    transform: scale(1.05);
    transition: transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
    filter: brightness(1.1);
  }
  
  .image-container img {
    transition: transform 0.4s cubic-bezier(0.22, 1, 0.36, 1), filter 0.4s ease;
  }
  
  .card-wrapper:hover .arrow-icon {
    transform: translateX(4px);
    transition: transform 0.3s ease;
  }
  
  .arrow-icon {
    transition: transform 0.3s ease;
  }
  
  .card-wrapper:hover .external-link {
    background-color: hsl(var(--primary)/0.2);
    transform: scale(1.1);
  }
  
  @keyframes shine {
    0% {
      opacity: 0;
      transform: translateX(-100%);
    }
    20% {
      opacity: 1;
    }
    80% {
      opacity: 1;
    }
    100% {
      opacity: 0;
      transform: translateX(100%);
    }
  }
  
  /* Handle dark mode with better shadow contrast */
  :global(.dark) .card {
    box-shadow: 0 10px 40px -15px rgba(0, 0, 0, 0.7);
  }
  
  :global(.dark) .card:hover {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.8);
  }
  
  /* Reduced motion considerations */
  @media (prefers-reduced-motion: reduce) {
    .card-wrapper, .card, .image-container img, .card-shine, .arrow-icon, .external-link {
      transition: none !important;
      animation: none !important;
      transform: none !important;
    }
  }
</style>
